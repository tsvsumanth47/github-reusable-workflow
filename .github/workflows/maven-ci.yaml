name: SonarCloud
on:
  workflow_call:
    inputs:
      config-path:
        required: true
        type: string
    secrets:
      SONAR_TOKEN:
         required: true
      

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

     # - name: Analyze with SonarCloud
      #  uses: sonarsource/sonarcloud-github-action@v3.1.0 # Ex: v2.1.0, See the latest version at https://github.com/marketplace/actions/sonarcloud-scan
       # with:
        #  projectBaseDir: demo
         # args: >
          # -Dsonar.organization=tsvsumanth47
          # -Dsonar.projectKey=tsvsumanth47_myapp-repo
          # -Dsonar.python.coverage.reportPaths=coverage.xml
          # -Dsonar.sources=lib/
          # -Dsonar.test.exclusions=tests/**
          # -Dsonar.tests=tests/
          # -Dsonar.verbose=true
      #- name: Build and analyze
       # env:
       #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
       #   SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       # run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY }} #tsvsumanth47_myapp-repo

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v4
        with:
         audience: sts.amazonaws.com
         aws-region: us-west-2
         role-to-assume: arn:aws:iam::339712826475:role/aws-cred-role

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ vars.REPO_NAME }} #springboot-eks-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

          
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          repository: 'tsvsumanth47/argocd-k8s-manifests'
          ref: 'main'


      - name: Update the kubernetes manifests file
        run: |
          "echo 'testing job'"
          "git config user.email tsvsumanth47@gmail.com"
          "git config user.name tsvsumanth47"
          "cat manifests/deployment.yaml"
          "cd manifests && sed -i 's+339712826475.dkr.ecr.us-west-2.amazonaws.com/myapprepo.*+339712826475.dkr.ecr.us-west-2.amazonaws.com/myapprepo:${{ github.sha }}+g' deployment.yaml"
          "git add -A"
          "git commit -m 'Done by github actions changemanifest: ${{ github.sha }}'"
          "git push https://github.com/tsvsumanth47/argocd-k8s-manifests.git HEAD:main"
